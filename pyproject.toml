[project]
name = "discord-reminder-bot"
version = "3.0.0"
description = "Discord bot that allows you to set date, cron and interval reminders."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "apscheduler",
    "dateparser",
    "discord-py[speed]",
    "discord-webhook",
    "loguru",
    "python-dotenv",
    "sentry-sdk",
    "sqlalchemy",
]

[dependency-groups]
dev = ["pytest"]

[tool.ruff]
preview = true
line-length = 140
lint.select = ["ALL"]
lint.pydocstyle.convention = "google"
lint.isort.required-imports = ["from __future__ import annotations"]
lint.pycodestyle.ignore-overlong-task-comments = true

lint.ignore = [
    "C901",    # Checks for functions with a high McCabe complexity.
    "CPY001",  # Checks for the absence of copyright notices within Python files.
    "D100",    # Checks for undocumented public module definitions.
    "D104",    # Checks for undocumented public package definitions.
    "D106",    # Checks for undocumented public class definitions, for nested classes.
    "E501",    # Checks for lines that exceed the specified maximum character length.
    "ERA001",  # Checks for commented-out Python code.
    "FBT001",  # Checks for the use of boolean positional arguments in function definitions, as determined by the presence of a bool type hint.
    "FBT002",  # Checks for the use of boolean positional arguments in function definitions, as determined by the presence of a boolean default value.
    "FIX002",  # Checks for "TODO" comments.
    "PLR0913", # Checks for function definitions that include too many arguments.
    "PLR0917", # Checks for function definitions that include too many positional arguments.
    "PLR2004", # Checks for magic values used in comparison.
    "PLR6301", # Checks for the presence of unused self parameter in methods definitions.

    # Conflicting lint rules when using Ruff's formatter
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "COM812", # Checks for the absence of trailing commas.
    "COM819", # Checks for the presence of prohibited trailing commas.
    "D206",   # Checks for docstrings that are indented with tabs.
    "D300",   # Checks for docstrings that use '''triple single quotes''' instead of """triple double quotes""".
    "E111",   # Checks for indentation with a non-multiple of 4 spaces.
    "E114",   # Checks for indentation of comments with a non-multiple of 4 spaces.
    "E117",   # Checks for over-indented code.
    "ISC001", # Checks for implicitly concatenated strings on a single line.
    "ISC002", # Checks for implicitly concatenated strings that span multiple lines.
    "Q000",   # Checks for inline strings that use single quotes or double quotes, depending on the value of the lint.flake8-quotes.inline-quotes option.
    "Q001",   # Checks for multiline strings that use single quotes or double quotes, depending on the value of the lint.flake8-quotes.multiline-quotes setting.
    "Q002",   # Checks for docstrings that use single quotes or double quotes, depending on the value of the lint.flake8-quotes.docstring-quotes setting.
    "Q003",   # Checks for strings that include escaped quotes, and suggests changing the quote style to avoid the need to escape them.
    "W191",   # Checks for indentation that uses tabs.
]

[tool.ruff.lint.per-file-ignores]
"**/test_*.py" = [
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison, ...
    "S101",    # asserts allowed in tests...
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    "ignore:Parsing dates involving a day of month without a year specified is ambiguious:DeprecationWarning:dateparser\\.utils\\.strptime",
    "ignore::DeprecationWarning:aiohttp.cookiejar",
]
